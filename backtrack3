Задача вывода путника из лабиринта. Дан лабиринт размером N*N (N<=15).
Форма лабиринта записана в текстовом файле, стена обозначается симаолом М, отсутствие - символ пробела. Даны коорлинаты путника в лабиринте (номер строки Х и номер столбца У. Нужно посчитать длину самого короткого пути выхода из лабиринта. Длина пути определяется числом леток на которые должна ступить нога пктника.

#include <windows.h>
#pragma hdrstop
#include "pt4.h"
#include <fstream>
#include <string>
using namespace std;

int n, minlen = 1000;
int length = 0;

void go(char** lab, int x, int y)
{
	length++;
	if (lab[x][y] == ' ')
	{
		lab[x][y] = '+';
		if ((x == 0) || (x == n - 1) || (y == 0) || (y == n - 1))
		{
			if (length < minlen)
				minlen = length;
		}
		else
		{
			if (x != n - 1) go(lab, x + 1, y);
			if (y != n - 1) go(lab, x, y + 1);
			if (x != 0) go(lab, x - 1, y);
			if (y != 0) go(lab, x, y - 1);
		}
		lab[x][y] = ' ';
	}
	length--;
}

void Solve()
{
	Task("BackTrack3");
	string S;
	ifstream F;
	int i, j, x, y;
	string S1;
	char** lab;

	pt >> S1;
	pt >> n >> x >> y;

	F.open(S1.c_str(), ios::in);

	lab = new char* [n];
	for (i = 0; i < n; i++)
		lab[i] = new char[n];

	for (i = 0; i < n; i++)
	{
		getline(F, S);
		for (j = 0; j < n; j++)
			lab[i][j] = S[j];
	}

	F.close();

	go(lab, x - 1, y - 1);
	pt << minlen;
}
